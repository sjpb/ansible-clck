---
# WIP: playbook to install/use intel cluster checker (clck): https://software.intel.com/en-us/intel-cluster-checker
#
# run using:
#   ansible-playbook -e @config/openhpc.yml -i ansible/inventory-openhpc play.yml
# ** from next to this playbook **, where paths are to p3 appliances files
#
# assumes that there is /home shared between all nodes
# Note this will overwrite an existing ~/clck_results.log on the launching host (if clck runs ok)

# TODO: check entropy is ok and fix hw support if needed

- name: ensure passwordless ssh from login->compute works
  hosts: 127.0.0.1
  connection: local
  tasks:
    - name: add ssh identities
      command: ssh-add 
  # TODO: also need to make sure the agent is started and keys exist etc...

- name: install intel packages
# clck docs don't state this as a prerequisite but they appear to be, to not get a FAIL at least
  hosts: openhpc_login openhpc_compute
  become: yes
  tasks:
    - name: add intel key
      # TODO: make key adding idempotent
      command: rpm --import https://yum.repos.intel.com/intel-gpg-keys/GPG-PUB-KEY-INTEL-SW-PRODUCTS-2019.PUB
    - name: add intel HPC repos
      command: yum-config-manager --add-repo https://yum.repos.intel.com/setup/intelproducts.repo
      # note yum_repository module doesn't support adding .repo files (https://stackoverflow.com/a/53982372/916373)
    - name: install intel-mpi
      yum:
        name: intel-mpi
        state: present
    - name: install intel-mkl & hpl
      yum:
        name: intel-mkl
        state: present
    - name: add intel CLCK repo
      command: yum-config-manager --add-repo https://yum.repos.intel.com/clck/2019/setup/intel-clck-2019.repo
    - name: install CLCK
      yum:
        name: intel-clck
        state: present

- name: run clck
# NB: *don't* want to be root for this iaw clck docs
  hosts: openhpc_login
  tasks:
  - name: create CLCK node file
    copy:
      content: "{{ '\n'.join(groups['openhpc_compute']) + '\n'}}"
      dest: ~/clck_nodes
  - name: run clck
    script: "{{ playbook_dir }}/run_clck.sh"
    # have to do this as a script as have to source various files first
  - name: retrieve results
    fetch:
      src: ~/clck_results.log
      flat: yes
      dest: ~/clck_results.log
    register: result
  - debug:
      msg: "Retrieved results as ~/clck_results.log"
    when: result is succeeded
  - debug:
      msg: "** No results retrieved **"
    when: result is failed

# TODO: install high-performance linpack

